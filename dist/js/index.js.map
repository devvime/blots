{
  "version": 3,
  "sources": ["../../src/router.js", "../../src/core/getValueFromData.js", "../../src/core/textNode.js", "../../src/core/setDeepValue.js", "../../src/core/parseClassMap.js", "../../src/core/elements.js", "../../src/blots.js", "../../src/state.js", "../../src/component.html", "../../src/index.js"],
  "sourcesContent": ["export class Router {\n  constructor() {\n    this.routes = [];\n\n    window.addEventListener('popstate', () => this.resolve());\n    this.setDataLink();\n  }\n\n  add(path, callback) {\n    this.routes.push({ path, callback });\n  }\n\n  navigate(path) {\n    history.pushState({}, '', path);\n    document.querySelector('app').innerHTML = ''\n    this.resolve();\n  }\n\n  setDataLink() {\n    document.querySelectorAll('a[data-link]').forEach(el => {\n      el.addEventListener('click', (e) => {\n        e.preventDefault();\n        const target = e.currentTarget.getAttribute('href');\n        if (target) this.navigate(target);\n      });\n    });\n  }\n\n  resolve() {\n    const currentPath = window.location.pathname;\n    const query = this.parseQueryParams(window.location.search);\n    for (const route of this.routes) {\n      const match = this.matchPath(route.path, currentPath);\n      if (match) {\n        route.callback(match, query);\n        return;\n      }\n    }\n    console.warn('No route matched:', currentPath);\n  }\n\n  matchPath(routePath, currentPath) {\n    const routeParts = routePath.split('/').filter(Boolean);\n    const pathParts = currentPath.split('/').filter(Boolean);\n\n    if (routeParts.length !== pathParts.length) return null;\n\n    const params = {};\n\n    for (let i = 0; i < routeParts.length; i++) {\n      const routePart = routeParts[i];\n      const pathPart = pathParts[i];\n\n      if (routePart.startsWith(':')) {\n        params[routePart.substring(1)] = decodeURIComponent(pathPart);\n      } else if (routePart !== pathPart) {\n        return null;\n      }\n    }\n\n    return params;\n  }\n\n  parseQueryParams(search) {\n    const query = {};\n    const params = new URLSearchParams(search);\n    params.forEach((value, key) => {\n      query[key] = value;\n    });\n    return query;\n  }\n}\n", "export function getValueFromData(data, key) {\n  const parts = key.split(\".\");\n  let val = data;\n  for (const part of parts) {\n    if (val && typeof val === \"object\") {\n      val = val[part];\n    } else {\n      return undefined;\n    }\n  }\n  return val;\n}\n", "import { getValueFromData } from \"./getValueFromData.js\";\n\nexport function textNode(data, node) {\n  if (node.nodeType === 3) {\n    const matches = node.textContent.match(/{{\\s*[\\w.]+\\s*}}/g);\n    if (matches) {\n      matches.forEach((match) => {\n        const key = match.replace(/[{}]/g, \"\").trim();\n        const value = getValueFromData(data, key);\n        node.textContent = node.textContent.replace(match, value ?? \"\");\n      });\n    }\n  }\n}\n", "export function setDeepValue(obj, path, value) {\n  const keys = path.split(\".\");\n  let current = obj;\n  for (let i = 0; i < keys.length - 1; i++) {\n    const key = keys[i];\n    if (!(key in current)) current[key] = {};\n    current = current[key];\n  }\n  current[keys[keys.length - 1]] = value;\n  obj.refresh_at = new Date().getMilliseconds();\n}\n", "export function parseClassMap(str, data) {\n  const result = {};\n  const objectBody = str.trim().slice(1, -1);\n  const pairs = objectBody.split(\",\").map((p) => p.trim());\n\n  for (const pair of pairs) {\n    const [rawKey, rawExpr] = pair.split(\":\").map((s) => s.trim());\n    const key = rawKey.replace(/^[\"']|[\"']$/g, \"\");\n\n    try {\n      const fn = new Function(\"data\", `with(data) { return (${rawExpr}) }`);\n      result[key] = fn(data);\n    } catch (e) {\n      console.warn(`Erro ao avaliar express\u00E3o para @class: ${rawExpr}`, e);\n    }\n  }\n\n  return result;\n}\n", "import { getValueFromData } from \"./getValueFromData.js\";\nimport { setDeepValue } from \"./setDeepValue.js\";\nimport { parseClassMap } from \"./parseClassMap.js\";\n\nexport function elements(node, data, methods, parseBindings) {\n  if (node.nodeType === 1) {\n    [...node.attributes].forEach((attr) => {\n      const name = attr.name;\n      const value = attr.value;\n\n      if (name === \"@click\") node.addEventListener(\"click\", methods[value]);\n\n      if (name === \"@change\") handleChange(node, methods, value);\n\n      if (name === \"@input\") handleInput(node, methods)\n\n      if (name === \"@value\") handleValue(node, data, value)\n\n      if (name === \"@model\") handleModel(node, data, value);\n\n      if (name === \"@if\") handleIf(node, data, value)\n\n      if (name === \"@else\") handleElse(node, data, value)\n\n      if (name === \"@for\") handleFor(node, data, value);\n\n      if (name === \"@class\") handleClass(node, value, data);\n    });\n  }\n\n  [...node.childNodes].forEach((child) => parseBindings(child));\n}\n\nfunction handleChange(node, methods, value) {\n  node.addEventListener(\"change\", (e) => {\n    if (methods[value]) methods[value](e);\n  });\n}\n\nfunction handleInput(node, methods) {\n  node.addEventListener(\"input\", (e) => {\n    if (methods[value]) methods[value](e);\n  });\n}\n\nfunction handleValue(node, data, value) {\n  node.value = getValueFromData(data, value) ?? \"\";\n}\n\nfunction handleModel(node, data, value) {\n  node.value = getValueFromData(data, value) ?? \"\";\n  node.addEventListener(\"input\", (e) => {\n    setDeepValue(data, value, e.target.value);\n    const name = e.target.getAttribute(\"@name\");\n    document.querySelector(`[\\\\@name=\"${name}\"]`).focus();\n  });\n}\n\nfunction handleIf(node, data, value) {\n  if (!getValueFromData(data, value)) node.remove();\n}\n\nfunction handleElse(node, data, value) {\n  if (getValueFromData(data, value)) node.remove();\n}\n\nfunction handleFor(node, data, value) {\n  const [itemName, , listName] = value.split(\" \");\n  const list = getValueFromData(data, listName);\n  if (Array.isArray(list)) {\n    const parent = node.parentElement;\n    list.forEach((item) => {\n      const clone = node.cloneNode(true);\n      clone.removeAttribute(\"@for\");\n      clone.innerHTML = clone.innerHTML.replace(\n        new RegExp(`{{\\\\s*${itemName}\\\\s*}}`, \"g\"),\n        item\n      );\n      parent.insertBefore(clone, node);\n    });\n    node.remove();\n  }\n}\n\nfunction handleClass(node, value, data) {\n  try {\n    const classMap = parseClassMap(value, data);\n    for (const className in classMap) {\n      const resolved = classMap[className];\n      if (resolved) {\n        node.classList.add(className);\n      } else {\n        node.classList.remove(className);\n      }\n    }\n  } catch (e) {\n    console.error(\"Error when interpreting @class:\", e);\n  }\n}\n", "import { textNode } from \"./core/textNode.js\";\nimport { elements } from \"./core/elements.js\";\n\nexport default function blots(rootSelector, data, methods) {\n  const root = document.querySelector(rootSelector);\n\n  function parseBindings(node) {\n    textNode(data, node)\n    elements(node, data, methods, parseBindings)\n  }\n\n  parseBindings(root);\n}\n", "export function state(obj, onChange) {\n  return new Proxy(obj, {\n    set(target, prop, value) {\n      target[prop] = value;\n      if (typeof onChange === \"function\") onChange({ prop, value, target });\n      return true;\n    },\n  });\n}\n\nexport function observable() {\n  const observers = new Set();\n  return {\n    subscribe: (observer) => observers.add(observer),\n    unsubscribe: (observer) => observers.delete(observer),\n    notify: (data) => observers.forEach((observer) => observer(data)),\n  };\n}\n", "<h1>{{ title }}</h1>\n\n<input type=\"text\" @change=\"updateTitle\" />\n\n<button @click=\"sayHello\">Clique aqui</button>\n<button @click=\"testIf\">Test if</button>\n\n<ul>\n    <li @for=\"item in items\">{{ item }}</li>\n</ul>\n\n<p @if=\"showMessage\">Mensagem vis\u00EDvel</p>\n\n<button @click=\"toggle\" @class=\"{ active: isActive }\">\n    <span @if=\"isActive\">Desativar</span>\n    <span @else=\"isActive\">Ativar</span>\n</button>\n\n<input type=\"text\" @model=\"name\" @name=\"inputName\">\n<input type=\"text\" @model=\"title\" @name=\"inputTitle\">\n<input type=\"text\" @model=\"user.name\" @name=\"inputUserName\">\n\n<p>Ol\u00E1, {{ name }}!</p>\n\n<p>User name: {{ user.name }}</p>\n<p>Address: street: {{ user.address.street }}</p>", "import { Router } from \"./router.js\";\nimport blots from \"./blots.js\";\nimport { state } from \"./state.js\";\n\nimport template from \"./component.html\";\n\nconst router = new Router();\n\nrouter.add(\"/\", async () => {\n  const data = state(\n    {\n      name: \"Victor\",\n      title: \"Ol\u00E1 mundo!\",\n      showMessage: true,\n      items: [\"Ma\u00E7\u00E3\", \"Banana\", \"Laranja\"],\n      isActive: false,\n      user: {\n        name: 'Steve',\n        address: {\n          street: 'Rua de test'\n        }\n      },\n      methods: {\n        sayHello: () => alert(\"Ol\u00E1!\"),\n        testIf: () => {\n          data.showMessage = !data.showMessage;\n        },\n        updateTitle: (e) => {\n          data.items = [...data.items, e.target.value];\n        },\n        toggle: () => {\n          data.isActive = !data.isActive;\n        },\n      },\n    },\n    () => {\n      document.querySelector(\"app\").innerHTML = template;\n      blots(\"app\", data, data.methods);\n    }\n  );\n\n  document.querySelector(\"app\").innerHTML = template;\n  blots(\"app\", data, data.methods);\n});\n\nrouter.add(\"/user/:id/:name\", (params, query) => {\n  console.log(\"Params:\", params);\n  console.log(\"Query:\", query);\n});\n\nrouter.resolve();\n"],
  "mappings": "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",
  "names": ["Router", "init_router", "__esmMin", "path", "callback", "el", "e", "target", "currentPath", "query", "route", "match", "routePath", "routeParts", "pathParts", "params", "i", "routePart", "pathPart", "search", "value", "key", "getValueFromData", "data", "key", "parts", "val", "part", "init_getValueFromData", "__esmMin", "textNode", "data", "node", "matches", "match", "key", "value", "getValueFromData", "init_textNode", "__esmMin", "init_getValueFromData", "setDeepValue", "obj", "path", "value", "keys", "current", "i", "key", "init_setDeepValue", "__esmMin", "parseClassMap", "str", "data", "result", "pairs", "p", "pair", "rawKey", "rawExpr", "s", "key", "fn", "e", "init_parseClassMap", "__esmMin", "elements", "node", "data", "methods", "parseBindings", "attr", "name", "value", "handleChange", "handleInput", "handleValue", "handleModel", "handleIf", "handleElse", "handleFor", "handleClass", "child", "e", "_a", "getValueFromData", "setDeepValue", "itemName", "listName", "list", "parent", "item", "clone", "classMap", "parseClassMap", "className", "init_elements", "__esmMin", "init_getValueFromData", "init_setDeepValue", "init_parseClassMap", "blots", "rootSelector", "data", "methods", "root", "parseBindings", "node", "textNode", "elements", "init_blots", "__esmMin", "init_textNode", "init_elements", "state", "obj", "onChange", "target", "prop", "value", "init_state", "__esmMin", "component_default", "init_component", "__esmMin", "require_index", "__commonJSMin", "exports", "init_router", "init_blots", "init_state", "init_component", "router", "Router", "__async", "data", "state", "component_default", "blots", "params", "query"]
}
