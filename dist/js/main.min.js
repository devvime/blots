(()=>{var M=Object.defineProperty;var L=(e,t,n)=>t in e?M(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n;var c=(e,t,n)=>L(e,typeof t!="symbol"?t+"":t,n);var h=class{constructor(){this.routes=[],window.addEventListener("popstate",()=>this.resolve()),this.setDataLink()}add(t,n){this.routes.push({path:t,callback:n})}navigate(t){history.pushState({},"",t),document.querySelector("app").innerHTML="",this.resolve()}setDataLink(){document.querySelectorAll("a[data-link]").forEach(t=>{t.addEventListener("click",n=>{n.preventDefault();let s=n.currentTarget.getAttribute("href");s&&this.navigate(s)})})}resolve(){let t=window.location.pathname,n=this.parseQueryParams(window.location.search);for(let s of this.routes){let r=this.matchPath(s.path,t);if(r){s.callback(r,n);return}}console.warn("No route matched:",t)}matchPath(t,n){let s=t.split("/").filter(Boolean),r=n.split("/").filter(Boolean);if(s.length!==r.length)return null;let o={};for(let i=0;i<s.length;i++){let l=s[i],a=r[i];if(l.startsWith(":"))o[l.substring(1)]=decodeURIComponent(a);else if(l!==a)return null}return o}parseQueryParams(t){let n={};return new URLSearchParams(t).forEach((r,o)=>{n[o]=r}),n}};function p(e,t){let n=t.split("."),s=e;for(let r of n)if(s&&typeof s=="object")s=s[r];else return;return s}function v(e,t){if(t.nodeType===3){let n=t.textContent.match(/{{\s*[\w.]+\s*}}/g);n&&n.forEach(s=>{let r=s.replace(/[{}]/g,"").trim(),o=p(e,r);t.textContent=t.textContent.replace(s,o!=null?o:"")})}}function y(e,t,n){let s=t.split("."),r=e;for(let o=0;o<s.length-1;o++){let i=s[o];i in r||(r[i]={}),r=r[i]}r[s[s.length-1]]=n,e.refresh_at=new Date().getMilliseconds()}function w(e,t){let n={},r=e.trim().slice(1,-1).split(",").map(o=>o.trim());for(let o of r){let[i,l]=o.split(":").map(u=>u.trim()),a=i.replace(/^["']|["']$/g,"");try{let u=new Function("data",`with(data) { return (${l}) }`);n[a]=u(t)}catch(u){console.warn(`Erro ao avaliar express\xE3o para @class: ${l}`,u)}}return n}function x(e,t,n,s){e.nodeType===1&&[...e.attributes].forEach(r=>{let o=r.name,i=r.value;o==="@click"&&e.addEventListener("click",n[i]),o==="@change"&&k(e,n,i),o==="@input"&&A(e,n),o==="@value"&&P(e,t,i),o==="@model"&&q(e,t,i),o==="@if"&&D(e,t,i),o==="@else"&&T(e,t,i),o==="@for"&&N(e,t,i),o==="@class"&&C(e,i,t)}),[...e.childNodes].forEach(r=>s(r))}function k(e,t,n){e.addEventListener("change",s=>{t[n]&&t[n](s)})}function A(e,t){e.addEventListener("input",n=>{t[value]&&t[value](n)})}function P(e,t,n){var s;e.value=(s=p(t,n))!=null?s:""}function q(e,t,n){var s;e.value=(s=p(t,n))!=null?s:"",e.addEventListener("input",r=>{y(t,n,r.target.value);let o=r.target.getAttribute("@name");document.querySelector(`[\\@name="${o}"]`).focus()})}function D(e,t,n){p(t,n)||e.remove()}function T(e,t,n){p(t,n)&&e.remove()}function N(e,t,n){let[s,,r]=n.split(" "),o=p(t,r);if(Array.isArray(o)){let i=e.parentElement;o.forEach(l=>{let a=e.cloneNode(!0);a.removeAttribute("@for"),a.innerHTML=a.innerHTML.replace(new RegExp(`{{\\s*${s}\\s*}}`,"g"),l),i.insertBefore(a,e)}),e.remove()}}function C(e,t,n){try{let s=w(t,n);for(let r in s)s[r]?e.classList.add(r):e.classList.remove(r)}catch(s){console.error("Error when interpreting @class:",s)}}function d(e,t,n){let s=document.querySelector(e);function r(o){v(t,o),x(o,t,n,r)}r(s)}function b(e,t){return new Proxy(e,{set(n,s,r){return n[s]=r,typeof t=="function"&&t({prop:s,value:r,target:n}),!0}})}var m=class{constructor(t={},n={}){c(this,"component",{});c(this,"target","app");c(this,"template","");c(this,"params",{});c(this,"query",{});this.params=t,this.query=n,this.component=b({},()=>{this.render()}),this.init(),this.setMethods(),document.addEventListener("DOMContentLoaded",()=>{this.render()})}init(){}setMethods(){}render(){document.querySelector(this.target).innerHTML=this.template,d(this.target,this.component,this.component)}};var E=`<h1>{{ title }}</h1>

<input type="text" @change="updateTitle" />

<button @click="sayHello">Clique aqui</button>
<button @click="testIf">Test if</button>

<ul>
    <li @for="item in items">{{ item }}</li>
</ul>

<p @if="showMessage">Mensagem vis\xEDvel</p>

<button @click="toggle" @class="{ active: isActive }">
    <span @if="isActive">Desativar</span>
    <span @else="isActive">Ativar</span>
</button>

<input type="text" @model="name" @name="inputName">
<input type="text" @model="title" @name="inputTitle">
<input type="text" @model="user.name" @name="inputUserName">

<p>Ol\xE1, {{ name }}!</p>

<p>User name: {{ user.name }}</p>
<p>Address: street: {{ user.address.street }}</p>`;var f=class extends m{constructor(n,s){super(n,s);c(this,"target","app");c(this,"template",E);this.render()}init(){this.component.name="Victor",this.component.title="Hello World!",this.component.showMessage=!0,this.component.items=["Ma\xE7\xE3","Banana","Laranja"],this.component.isActive=!1,this.component.user={name:"Steve",address:{street:"Rua de test"}}}setMethods(){this.component.sayHello=()=>alert("Ol\xE1!"),this.component.testIf=()=>{this.component.showMessage=!this.component.showMessage},this.component.updateTitle=n=>{this.component.items=[...this.component.items,n.target.value]},this.component.toggle=()=>{this.component.isActive=!this.component.isActive}}};var g=new h;g.add("/",(e,t)=>new f(e,t));g.add("/user/:id/:name",(e,t)=>{console.log("Params:",e),console.log("Query:",t)});g.resolve();})();
//# sourceMappingURL=main.min.js.map
